{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{637:function(s,t,n){\"use strict\";n.r(t);var a=n(0),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[n(\"h3\",{attrs:{id:\"集合set\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#集合set\"}},[s._v(\"#\")]),s._v(\" 集合set\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[s._v(\"集合是可变得容器\")]),s._v(\" \"),n(\"li\",[s._v(\"集合内得数据对象都是唯一的（不能重复的）\")]),s._v(\" \"),n(\"li\",[s._v(\"集合是无序的存储结构，集合中的数据没有先后关系\")]),s._v(\" \"),n(\"li\",[s._v(\"集合内的元素必须是不可变对象\")]),s._v(\" \"),n(\"li\",[s._v(\"集合是可迭代对象\")]),s._v(\" \"),n(\"li\",[s._v(\"集合相当于只有键没有值的字典\")])]),s._v(\" \"),n(\"p\",[s._v(\"创建空集合\"),n(\"br\"),s._v(\"\\n    s = set()\"),n(\"br\"),s._v(\"\\n创建非空集合\"),n(\"br\"),s._v('\\n    s = {1, \"hello\", 3.14}')]),s._v(\" \"),n(\"p\",[s._v(\"集合的构造函数\"),n(\"br\"),s._v(\"\\n    set() 创建一个空的集合对象（不能用{}来创建空集合）\"),n(\"br\"),s._v(\"\\n    set(iterable) 用可迭代对象创建一个新的集合对象\")]),s._v(\" \"),n(\"p\",[s._v(\"集合的运算\"),n(\"br\"),s._v(\"\\n    交集，并集，补集，子集，超集\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"生成两个集合的交集 &\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language-python line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[n(\"code\",[s._v(\"s1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\ns2 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\ns3 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" s1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"&\")]),s._v(\" s2    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#  s3 = {2, 3}\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[n(\"strong\",[s._v(\"生成两个集合的并集 |\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language-python line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[n(\"code\",[s._v(\"s1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\ns2 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\ns3 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" s1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\" s2    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#  s3 = {1, 2, 3, 4}\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[n(\"strong\",[s._v(\"生成一个集合的补集\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language-python line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[n(\"code\",[s._v(\"s1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\ns2 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\ns3 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" s1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\" s2    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#  s3 = {1}\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[n(\"strong\",[s._v(\"生成两个集合的对称补集 ^\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language-python line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[n(\"code\",[s._v(\"s1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\ns2 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\ns3 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" s1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"^\")]),s._v(\" s2 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"s1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\" s2\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"s2 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\" s1\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#  s3 = {1, 4}\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[s._v(\"判断一个集合是否是另一个集合的超集 >\"),n(\"br\"),s._v(\"\\n判断一个集合是否是另一个集合的子集 <\"),n(\"br\"),s._v(\"\\n判断两个集合是否相同 ==\"),n(\"br\"),s._v(\"\\n判断两个集合是否不同 !=\")]),s._v(\" \"),n(\"p\",[s._v(\"in/not in 运算符\"),n(\"br\"),s._v(\"\\n    等同于字典的in/not in\"),n(\"br\"),s._v(\"\\n    作用于集合中，判断某个值是否存在于集合中\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"Python3中set常用方法\")]),n(\"br\"),s._v(\"\\nS.add(e)  在集合中添加一个新的元素e，如果元素已经存在，则不添加\"),n(\"br\"),s._v(\"\\nS.remove(e)  从集合中删除一个元素，如果元素不存在于集合中，则会产生一个KeyError的错误\"),n(\"br\"),s._v(\"\\nS.discard(e)  从集合中移除一个元素，如果元素不存在则什么都不做\"),n(\"br\"),s._v(\"\\nS.clear()  清空集合内的所有元素\"),n(\"br\"),s._v(\"\\nS.copy()  将集合进行一次浅拷贝\"),n(\"br\"),s._v(\"\\nS.pop()  从集合S中删除一个随机元素，如果集合为空，则引发KeyError异常\"),n(\"br\"),s._v(\"\\nS.update(s2)  用S与s2得到的全集更新S\"),n(\"br\"),s._v(\"\\nS.difference(s2)  用S-s2，将结果返回给S\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"集合推导式\")]),n(\"br\"),s._v(\"\\n集合推导式是用可迭代对象生成集合的表达式\"),n(\"br\"),s._v(\"\\n语法：\"),n(\"br\"),s._v(\"\\n    {表达式 for 变量 in 可迭代对象 [if 真值表达式]}\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"固定集合frozenset\")]),n(\"br\"),s._v(\"\\n固定集合是不可变的，无序的，含有唯一元素的集合\"),n(\"br\"),s._v(\"\\n作用：\"),n(\"br\"),s._v(\"\\n    固定集合可以作为字典的键，还可以作为集合的值\\n固定集合的构造函数：\"),n(\"br\"),s._v(\"\\n    frozenset()  创建一个空的固定集合\"),n(\"br\"),s._v(\"\\n    frozenset(iterable)  用可迭代对象创建一个空的固定集合\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"函数function\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数function\"}},[s._v(\"#\")]),s._v(\" 函数function\")]),s._v(\" \"),n(\"p\",[s._v(\"函数是可以重复执行的语句块，可以重复调用\"),n(\"br\"),s._v(\"\\n作用：\"),n(\"br\"),s._v(\"\\n    1.用于封装语句块，提高代码的重用性\"),n(\"br\"),s._v(\"\\n    2.定义用户级别的函数\\n语法：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-python line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"def\")]),s._v(\" 函数名\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"形参列表\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n    语句块\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"p\",[s._v(\"说明：\"),n(\"br\"),s._v(\"\\n    1.函数的名字就是语句块的名字\"),n(\"br\"),s._v(\"\\n    2.函数名的名字规则与变量名相同\"),n(\"br\"),s._v(\"\\n    3.函数名是一个变量（不要轻易对其赋值）\"),n(\"br\"),s._v(\"\\n    4.函数有自己的名字空间，在函数外部不可以访问函数内部的变量，在函数内可以访问函数外部的变量，但不能修改此变量\"),n(\"br\"),s._v(\"\\n    5.函数如果不需要传入参数，形参列表可以为空\"),n(\"br\"),s._v(\"\\n    6.语句部分不能为空，如果为空需要填充pass\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"函数调用\")]),n(\"br\"),s._v(\"\\n语法：\"),n(\"br\"),s._v(\"\\n    函数名(实参)\"),n(\"br\"),s._v(\"\\n说明：\"),n(\"br\"),s._v(\"\\n    1.函数调用是一个表达式\"),n(\"br\"),s._v(\"\\n    2.如果函数内部没有return语句，函数调用完毕后返回None对象\"),n(\"br\"),s._v(\"\\n    3.如果函数需要返回其他对象需要用到return语句\")])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}