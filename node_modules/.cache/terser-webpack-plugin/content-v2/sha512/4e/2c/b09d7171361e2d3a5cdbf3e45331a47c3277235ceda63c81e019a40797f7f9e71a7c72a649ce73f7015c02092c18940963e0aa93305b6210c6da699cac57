{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{631:function(n,s,t){\"use strict\";t.r(s);var a=t(0),e=Object(a.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[t(\"h3\",{attrs:{id:\"网络通信模型\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#网络通信模型\"}},[n._v(\"#\")]),n._v(\" 网络通信模型\")]),n._v(\" \"),t(\"p\",[t(\"strong\",[n._v(\"通信模型分类\")])]),n._v(\" \"),t(\"ol\",[t(\"li\",[n._v(\"循环网络模型：循环接收客户端请求，同时只能处理一个客户端请求任务，处理完再进行下一个\\n\"),t(\"ul\",[t(\"li\",[n._v(\"优点：实现简单，占用资源少\")]),n._v(\" \"),t(\"li\",[n._v(\"缺点：无法同时处理多个请求，效率不高\")]),n._v(\" \"),t(\"li\",[n._v(\"适用情况：客户端不会长时间占用服务器，任务比较小，任务量不大，udp比tcp实现更简单\")])])]),n._v(\" \"),t(\"li\",[n._v(\"IO并发网络模型：利用IO多路复用等IO模型技术，同时处理多个IO任务请求\\n\"),t(\"ul\",[t(\"li\",[n._v(\"优点：资源消耗少，能同时处理多个IO\")]),n._v(\" \"),t(\"li\",[n._v(\"缺点：只能处理IO操作\")])])]),n._v(\" \"),t(\"li\",[n._v(\"多进程/线程并发：当一个客户端连接服务器，就创建一个新的进程/线程处理客户端请求，客户端退出时进程/线程销毁\\n\"),t(\"ul\",[t(\"li\",[n._v(\"优点：同时满足多个客户端同时占用服务器需求，可以处理各种请求\")]),n._v(\" \"),t(\"li\",[n._v(\"缺点：资源消耗大\")]),n._v(\" \"),t(\"li\",[n._v(\"使用情况：客户端请求比较复杂，处理事件较长，配合较强的服务器部署技术（负载均衡，集群技术，分布式处理等）\")])])])]),n._v(\" \"),t(\"p\",[t(\"strong\",[n._v(\"多进程网络并发\")]),t(\"br\"),n._v(\"\\n基于fork的并发模型\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"创建监听套接字\")]),n._v(\" \"),t(\"li\",[n._v(\"循环等待客户端连接\")]),n._v(\" \"),t(\"li\",[n._v(\"有客户端连接创建新的进程处理客户端请求\")]),n._v(\" \"),t(\"li\",[n._v(\"原进程继续等待其他客户端连接\")]),n._v(\" \"),t(\"li\",[n._v(\"如果客户端退出，则销毁对应进程\")])]),n._v(\" \"),t(\"h3\",{attrs:{id:\"协程技术\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#协程技术\"}},[n._v(\"#\")]),n._v(\" 协程技术\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"定义 ： 纤程，微线程,是为非抢占式多任务产生子程序的计算机组件。协程允许不同入口点在不同位置开始或者暂停，简单来说，协程就是可以暂停执行的函数\")]),n._v(\" \"),t(\"li\",[n._v(\"协程本质就是一个可以暂停执行的函数。当该函数暂停时可以跳出函数执行其他内容，重新加载时可以继续执行而不是重新执行\")]),n._v(\" \"),t(\"li\",[n._v(\"yield 在python中时实现原生协程的关键字\")]),n._v(\" \"),t(\"li\",[n._v(\"协程原理：记录一个函数的上下文栈帧，协程切换调度时会将记录的栈帧位置保存起来，切换回来时再进行调取，恢复原有执行内容，从上次位置继续执行\")]),n._v(\" \"),t(\"li\",[n._v(\"协程优缺点\\n\"),t(\"ul\",[t(\"li\",[n._v(\"优点 ： 占用资源少，效率高，可以同时在应用层完成多个任务\")]),n._v(\" \"),t(\"li\",[n._v(\"缺点 ： 无法利用计算机多核\")])])])]),n._v(\" \"),t(\"p\",[t(\"strong\",[n._v(\"协程模块\")]),t(\"br\"),n._v(\"\\ngreenlet\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"sudo  pip3 install  greenlet\")]),n._v(\" \"),t(\"li\",[n._v(\"函数\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-python line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[t(\"code\",[n._v(\"greenlet\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\".\")]),n._v(\"greenlet\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\"(\")]),n._v(\"func\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\")\")]),n._v(\"\\n    功能\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\":\")]),n._v(\" 创建协程对象\\n    参数：协程函数\\n\\ng\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\".\")]),n._v(\"switch\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\")\")]),n._v(\"\\n    功能\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\":\")]),n._v(\" 选择执行的协程\\n\")])]),n._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),t(\"br\")])]),t(\"p\",[n._v(\"gevent\"),t(\"br\"),n._v(\"\\n安装：\")]),n._v(\" \"),t(\"div\",{staticClass:\"language-python line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[t(\"code\",[n._v(\"sudo  pip3 install gevent\\n\")])]),n._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),t(\"br\")])]),t(\"p\",[n._v(\"函数\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"gevent.spawn(func,argv,...)\\n    功能 ： 生成协程对象\\n    参数 ： func  协程函数\\n    \\t\\targv  协程函数参数\\n    返回值： 协程对象\\n\\ngevent.joinall(list,[timeout])\\n    功能: 阻塞等待协程执行完毕\\n    参数: list  协程对象列表\\n\\ngevent.sleep(sec)\\n    功能： gevent睡眠阻塞\\n    * gevent协程只有遇到gevent标记的阻塞行为才会自动跳转\\n\\n1. monkey插件 \\n    功能：使普通的pythonIO阻塞行为变为可以触发gevent协程阻塞的行为\\n    使用： from  gevent  import  monkey\\n    在模块导入前，运行响应的monkey插件函数\\n    e.g. \\n    \\tmonkey.patch_all()\\n    \\tmonkey.patch_socket()\\n\")])]),n._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[n._v(\"21\")]),t(\"br\")])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}