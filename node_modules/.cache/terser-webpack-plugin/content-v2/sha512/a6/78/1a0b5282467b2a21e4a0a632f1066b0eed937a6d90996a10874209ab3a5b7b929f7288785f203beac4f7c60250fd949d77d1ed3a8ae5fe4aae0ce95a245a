{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{526:function(s,n,t){\"use strict\";t.r(n);var a=t(0),r=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h3\",{attrs:{id:\"osi七层模型-网络通信的标准化流程\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#osi七层模型-网络通信的标准化流程\"}},[s._v(\"#\")]),s._v(\" OSI七层模型--网络通信的标准化流程\")]),s._v(\" \"),t(\"p\",[s._v(\"应用层：提供用户服务，具体的内容由特定的程序规定\"),t(\"br\"),s._v(\"\\n表示层：提供数据的加密和压缩优化\"),t(\"br\"),s._v(\"\\n会话层：确定建立应用连接，选择传输服务\"),t(\"br\"),s._v(\"\\n网络层：路由选择，网络互联\"),t(\"br\"),s._v(\"\\n链路层：提供链路交换，具体消息的发送\"),t(\"br\"),s._v(\"\\n物理层：物理硬件、接口、网卡的规定\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"OSI模型优点\")]),t(\"br\"),s._v(\"\\n将功能分开，降低网络传输中的耦合度，使开发流程更加清晰，各部分各司其职\"),t(\"br\"),s._v(\"\\n高内聚：每个模块功能尽量单一，不会多个功能参杂\"),t(\"br\"),s._v(\"\\n低耦合：尽量降低每个模块之间的关联性\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"应用层：TFTP HTTP DNS SMTP\")]),s._v(\" \"),t(\"li\",[s._v(\"传输层：TCP UDP\")]),s._v(\" \"),t(\"li\",[s._v(\"网络层：IP\")]),s._v(\" \"),t(\"li\",[s._v(\"物理层：IEEE\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"特殊IP\")]),t(\"br\"),s._v(\"\\n127.0.0.1 本地测试IP\"),t(\"br\"),s._v(\"\\n0.0.0.0 自动使用本地可用网卡IP\"),t(\"br\"),s._v(\"\\n192.168.0.1 代表当前网段\"),t(\"br\"),s._v(\"\\n192.168.1.1  通常为网关地址\"),t(\"br\"),s._v(\"\\n192.168.1.255 广播地址\")]),s._v(\" \"),t(\"p\",[s._v(\"域名：网络服务器地址在网络上的名称\"),t(\"br\"),s._v(\"\\n端口号：端口号是地址的一部分，在一个系统中每个网络应用监听不同的端口，以获取对应端口传递的信息取值范围：1--65535\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"1-255  一些通用端口（众所周知的程序占用）\")]),s._v(\" \"),t(\"li\",[s._v(\"256-1023  系统端口\")]),s._v(\" \"),t(\"li\",[s._v(\"1024-65535  自用端口\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"获取应用程序的端口\")]),t(\"br\"),s._v('\\nIn[2] : socket.getservbyname(\"mysql\")'),t(\"br\"),s._v(\"\\nOut[2] : 3306\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"传输层服务\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"面向连接的传输服务 -- > TCP协议\\n\"),t(\"ul\",[t(\"li\",[s._v(\"传输特征：可靠的数据传输\")]),s._v(\" \"),t(\"li\",[s._v(\"可靠性：数据在传输中，无失序、无差错、无丢失、无重复\")])])]),s._v(\" \"),t(\"li\",[s._v(\"面向无连接的传输服务 -- > UDP协议\\n\"),t(\"ul\",[t(\"li\",[s._v(\"传输特点：\\n\"),t(\"ul\",[t(\"li\",[s._v(\"不保证传输的可靠性\")]),s._v(\" \"),t(\"li\",[s._v(\"没有连接和断开的过程\")]),s._v(\" \"),t(\"li\",[s._v(\"数据的首发比较自由\")])])])])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"socket套接字编程\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#socket套接字编程\"}},[s._v(\"#\")]),s._v(\" socket套接字编程\")]),s._v(\" \"),t(\"p\",[s._v(\"目的：通过编程语言提供的套接字编程接口，可以更简单的完成基于TCP和UDP的编程\"),t(\"br\"),s._v(\"\\n套接字：完成上述目标的一种手段\"),t(\"br\"),s._v(\"\\n套接字类别\"),t(\"br\"),s._v(\"\\n 流式套接字(SOCK_STREAM):传输基于TCP协议通信\"),t(\"br\"),s._v(\"\\n 数据报套接字(SOCK_DGRAM)：传输基于UDP协议通信\"),t(\"br\"),s._v(\"\\n 底层套接字(SOCK_RAM)：访问底层协议套接字\\n相关方法\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-python line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"创建套接字\\n    socket\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"socket\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"sock_family \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" AF_INET\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" sock_type \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" SOCK_STREAM\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" proto \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    功能：创建套接字\\n    参数：sock_family  地址族类型    sock_type  套接字类型    proto  通常为\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\"，选定子协议类型\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"绑定地址\\n    sockfd\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"bind\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"addr\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    功能：绑定地址\\n    参数：addr \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" 元组\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"ip\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" port\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"设置监听套接字\\n    sockfd\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"listen\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    功能：将套接字设置为监听套接字，创建监听队列\\n    参数：监听队列大小，一个监听套接字可以连接多个客户端\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"等待接收客户端连接\\n    connfd\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" addr \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" sockfd\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"accept\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    功能：阻塞等待客户端处理连接\\n    返回值：connfd 新的套接字，用于和客户端通信        addr 连接的客户端地址\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"ip\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" port\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"消息的收发\\n    data \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" connfd\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"recv\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"buffersize\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    功能：接收消息\\n    参数：一次接收消息的大小（字节）\\n    返回值：接收到的消息内容\\n\\n    n \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" connfd\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"send\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"data\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    功能：发送消息\\n    参数：要发送的消息内容\\n    返回值：实际发送的字节数\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"关闭套接字\\n    sockfd\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"close\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),t(\"br\")])])])}),[],!1,null,null,null);n.default=r.exports}}]);","extractedComments":[]}