{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{744:function(v,_,l){\"use strict\";l.r(_);var e=l(0),i=Object(e.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[l(\"blockquote\",[l(\"p\",[v._v(\"redis是key-value的数据，所以每一个数据都是一个键值对\"),l(\"br\"),v._v(\"\\n键的类型是字符串\"),l(\"br\"),v._v(\"\\n值的类型分5种：\")]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"字符串String\")]),v._v(\" \"),l(\"li\",[v._v(\"哈希 hash\")]),v._v(\" \"),l(\"li\",[v._v(\"列表 list\")]),v._v(\" \"),l(\"li\",[v._v(\"集合 set\")]),v._v(\" \"),l(\"li\",[v._v(\"有序集合 zset\\n数据操作的全部命令，可以查看Redis中文官方网站\")])])]),v._v(\" \"),l(\"h2\",{attrs:{id:\"string\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#string\"}},[v._v(\"#\")]),v._v(\" String\")]),v._v(\" \"),l(\"p\",[v._v(\"String是Redis最基本的类型\"),l(\"br\"),v._v(\"\\n最大能存储512MB的数据\"),l(\"br\"),v._v(\"\\nString类型是二进制安全的，即可以认为任何数据，比如数字、图片、序列化对象等\")]),v._v(\" \"),l(\"h3\",{attrs:{id:\"命令\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#命令\"}},[v._v(\"#\")]),v._v(\" 命令\")]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"设置\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"设置键值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"SET key value\")])])]),v._v(\" \"),l(\"li\",[v._v(\"设置键值以及过期时间，以秒为单位\\n\"),l(\"ul\",[l(\"li\",[v._v(\"SETEX key seconds value\")])])]),v._v(\" \"),l(\"li\",[v._v(\"设置多个键值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"MSET key value[key value ...]\")])])])]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"获取\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"根据键获取值，如果不存在此键则返回null\\n\"),l(\"ul\",[l(\"li\",[v._v(\"GET key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"根据多个键获取多个值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"MGET key [key ...]\")])])])]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"运算\")]),l(\"br\"),v._v(\"\\n要求 : 值是数字\")]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"将key对应的value加1\\n\"),l(\"ul\",[l(\"li\",[v._v(\"INCR key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"将key对应的value加整数\\n\"),l(\"ul\",[l(\"li\",[v._v(\"INCRBY key increment\")])])]),v._v(\" \"),l(\"li\",[v._v(\"将key对应的值减1\\n\"),l(\"ul\",[l(\"li\",[v._v(\"DECR key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"将key对应的值减整数\\n\"),l(\"ul\",[l(\"li\",[v._v(\"DECRBY key decrement\")])])])]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"其他\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"追加值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"APPEND key value\")])])]),v._v(\" \"),l(\"li\",[v._v(\"获取值长度\\n\"),l(\"ul\",[l(\"li\",[v._v(\"STRLEN key\")])])])]),v._v(\" \"),l(\"h2\",{attrs:{id:\"键命令\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#键命令\"}},[v._v(\"#\")]),v._v(\" 键命令\")]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"查找键，支持正则\\n\"),l(\"ul\",[l(\"li\",[v._v(\"KEYS pattern\")])])]),v._v(\" \"),l(\"li\",[v._v(\"判断键是否存在，如果存在返回1，不存在则返回null\\n\"),l(\"ul\",[l(\"li\",[v._v(\"EXISTS key [key ...]\")])])]),v._v(\" \"),l(\"li\",[v._v(\"查看键对应的value的类型\\n\"),l(\"ul\",[l(\"li\",[v._v(\"TYPE key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"删除键及对应的值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"DEL key [key ...]\")])])]),v._v(\" \"),l(\"li\",[v._v(\"设置过期时间，以秒为单位，创建时没有设置过期时间则一直存在，直到使用DEL移除\\n\"),l(\"ul\",[l(\"li\",[v._v(\"EXPIRE key seconds\")])])]),v._v(\" \"),l(\"li\",[v._v(\"查看有效时间，以秒为单位\\n\"),l(\"ul\",[l(\"li\",[v._v(\"TTL key\")])])])]),v._v(\" \"),l(\"h2\",{attrs:{id:\"hash\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#hash\"}},[v._v(\"#\")]),v._v(\" hash\")]),v._v(\" \"),l(\"p\",[v._v(\"hash用于存储对象，对象的格式为键值对\")]),v._v(\" \"),l(\"h3\",{attrs:{id:\"命令-2\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#命令-2\"}},[v._v(\"#\")]),v._v(\" 命令\")]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"设置\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"设置单个属性\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HSET key field value\")])])]),v._v(\" \"),l(\"li\",[v._v(\"设置多个属性\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HMSET key field value [field value ...]\")])])])]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"获取\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"获取一个属性的值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HGET key field\")])])]),v._v(\" \"),l(\"li\",[v._v(\"获取多个属性的值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HMGET key field [field ...]\")])])]),v._v(\" \"),l(\"li\",[v._v(\"获取所有属性和值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HGETALL key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"获取所有属性\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HKEYS key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"返回包含属性的个数\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HLEN key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"获取所有值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HVALS key\")])])])]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"其他\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"判断属性是否存在\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HEXISTS key field\")])])]),v._v(\" \"),l(\"li\",[v._v(\"删除属性及值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HDEL key field [field ...]\")])])]),v._v(\" \"),l(\"li\",[v._v(\"返回值的字符串长度\\n\"),l(\"ul\",[l(\"li\",[v._v(\"HSTRLEN key field\")])])])]),v._v(\" \"),l(\"h2\",{attrs:{id:\"list\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#list\"}},[v._v(\"#\")]),v._v(\" list\")]),v._v(\" \"),l(\"p\",[v._v(\"列表的元素类型为String\"),l(\"br\"),v._v(\"\\n按照插入数据排序\"),l(\"br\"),v._v(\"\\n在列表的头部或者尾部添加元素\")]),v._v(\" \"),l(\"h3\",{attrs:{id:\"命令-3\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#命令-3\"}},[v._v(\"#\")]),v._v(\" 命令\")]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"设置\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"在头部插入数据\\n\"),l(\"ul\",[l(\"li\",[v._v(\"LPUSH key value [value ...]\")])])]),v._v(\" \"),l(\"li\",[v._v(\"在尾部插入数据\\n\"),l(\"ul\",[l(\"li\",[v._v(\"RPUSH key value [value ...]\")])])]),v._v(\" \"),l(\"li\",[v._v(\"在一个元素的前|后插入数据\\n\"),l(\"ul\",[l(\"li\",[v._v(\"LINSERT key BEFORE | AFTER pivot value\")])])]),v._v(\" \"),l(\"li\",[v._v(\"设置指定索引的元素值,索引是基于0的下标,索引可以是负数，表示偏移量是从list尾部开始计数，如-1表示列表的最后一个元素\\n\"),l(\"ul\",[l(\"li\",[v._v(\"LSET key index value\")])])])]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"获取\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"移除并且返回key对应的list的第一个元素\\n\"),l(\"ul\",[l(\"li\",[v._v(\"LPOP key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"移除并返回存于key的list的最后一个元素\\n\"),l(\"ul\",[l(\"li\",[v._v(\"RPOP key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"返回存储在key的列表里指定范围内的元素，start和end偏移量都是基于0的下标，偏移量也就可以是负数，表示偏移量是从list尾部开始计数，如-1表示列表的最后一个元素\\n\"),l(\"ul\",[l(\"li\",[v._v(\"LRANGE key start stop\")])])])]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"其他\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"裁剪列表，改为原集合的一个子集，start和end的偏移量都是基于0的下标，偏移量也可以是负数，表示偏移量是从list尾部开始计数，如-1表示列表的最后一个元素\\n\"),l(\"ul\",[l(\"li\",[v._v(\"LTRIN key start stop\")])])]),v._v(\" \"),l(\"li\",[v._v(\"返回存储在key里的list的长度\\n\"),l(\"ul\",[l(\"li\",[v._v(\"LLEN key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"返回列表里索引对应的元素\\n\"),l(\"ul\",[l(\"li\",[v._v(\"LINDEX key index\")])])])]),v._v(\" \"),l(\"h2\",{attrs:{id:\"set\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#set\"}},[v._v(\"#\")]),v._v(\" set\")]),v._v(\" \"),l(\"p\",[v._v(\"无序集合\"),l(\"br\"),v._v(\"\\n元素为String类型\"),l(\"br\"),v._v(\"\\n元素具有唯一性，不能重复\")]),v._v(\" \"),l(\"h3\",{attrs:{id:\"命令-4\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#命令-4\"}},[v._v(\"#\")]),v._v(\" 命令\")]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"设置\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"添加元素\\n\"),l(\"ul\",[l(\"li\",[v._v(\"SADD key member [member ...]\")])])])]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"获取\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"返回key集合所有的元素\\n\"),l(\"ul\",[l(\"li\",[v._v(\"SMEMBER key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"返回集合元素个数\\n\"),l(\"ul\",[l(\"li\",[v._v(\"SCARD key\")])])])]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"其他\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"求多个集合的交集\\n\"),l(\"ul\",[l(\"li\",[v._v(\"SINTER key [key ...]\")])])]),v._v(\" \"),l(\"li\",[v._v(\"求某集合与其他集合的交集\\n\"),l(\"ul\",[l(\"li\",[v._v(\"SDIFF key [key ...]\")])])]),v._v(\" \"),l(\"li\",[v._v(\"求多个集合的合集\\n\"),l(\"ul\",[l(\"li\",[v._v(\"SUNION key [key ...]\")])])]),v._v(\" \"),l(\"li\",[v._v(\"判断元素是否在集合中\\n\"),l(\"ul\",[l(\"li\",[v._v(\"SISMEMBER key member\")])])])]),v._v(\" \"),l(\"h2\",{attrs:{id:\"zset\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#zset\"}},[v._v(\"#\")]),v._v(\" zset\")]),v._v(\" \"),l(\"p\",[v._v(\"sorted set 有序集合\"),l(\"br\"),v._v(\"\\n元素为String类型\"),l(\"br\"),v._v(\"\\n元素具有唯一性，不重复\"),l(\"br\"),v._v(\"\\n每个元素都会关联一个double类型的score，表示权重，通过权重将元素从小到大排序\"),l(\"br\"),v._v(\"\\n元素的score可以相同\")]),v._v(\" \"),l(\"h3\",{attrs:{id:\"命令-5\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#命令-5\"}},[v._v(\"#\")]),v._v(\" 命令\")]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"设置\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"添加\\n\"),l(\"ul\",[l(\"li\",[v._v(\"ZADD key score member [score member ...]\")])])])]),v._v(\" \"),l(\"p\",[l(\"strong\",[v._v(\"获取\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"返回指定范围内的元素\\n\"),l(\"ul\",[l(\"li\",[v._v(\"ZRANGE key start stop\")])])]),v._v(\" \"),l(\"li\",[v._v(\"返回元素个数\\n\"),l(\"ul\",[l(\"li\",[v._v(\"ZCARD key\")])])]),v._v(\" \"),l(\"li\",[v._v(\"返回有序集key中，score值在min和max之间的成员\\n\"),l(\"ul\",[l(\"li\",[v._v(\"ZCOUNT key min max\")])])]),v._v(\" \"),l(\"li\",[v._v(\"返回有序集key中，成员member的score值\\n\"),l(\"ul\",[l(\"li\",[v._v(\"ZSCORE key member\")])])])])])}),[],!1,null,null,null);_.default=i.exports}}]);","extractedComments":[]}