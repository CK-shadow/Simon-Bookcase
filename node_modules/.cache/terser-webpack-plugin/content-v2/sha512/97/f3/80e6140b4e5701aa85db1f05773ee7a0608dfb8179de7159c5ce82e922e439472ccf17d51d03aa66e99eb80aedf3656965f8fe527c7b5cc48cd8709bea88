{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{416:function(t,a,r){\"use strict\";r.r(a);var n=r(0),v=Object(n.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h2\",{attrs:{id:\"用单台虚拟主机实现多个域名\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#用单台虚拟主机实现多个域名\"}},[t._v(\"#\")]),t._v(\" 用单台虚拟主机实现多个域名\")]),t._v(\" \"),r(\"p\",[t._v(\"HTTP/1.1规范允许一台HTTP服务器搭建多个Web站点。比如，提供Web托管服务的供应商，可以用一台服务器为\\n多个客户服务，也可以以每位客户持有的域名运行各自不同的网站。这是因为利用了虚拟主机的功能。即使物理层\\n面只有一台服务器，但只要使用虚拟主机的功能，则可以假假想已具有多台服务器。\")]),t._v(\" \"),r(\"p\",[t._v(\"客户端使用HTTP协议访问服务器时，会经常采用www.baidu.com这样的域名，在互联网上，域名通过DNS服务映射\\n到IP地址（域名解析）之后访问目标网站。可见，当请求发送到服务器时，已经是以IP地址形式访问了。所以，如果\\n一台机器托管了两个域名，当收到请求时就需要到底访问的是哪个域名。在相同的IP地址下，由于虚拟主机可以寄存\\n多个不同的主机名和域名的Web网站，因此在发送HTTP请求时，必须在Host首部内完整指定主机名或域名的URI\")]),t._v(\" \"),r(\"hr\"),t._v(\" \"),r(\"h2\",{attrs:{id:\"通信数据转发程序：代理、网关和隧道\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#通信数据转发程序：代理、网关和隧道\"}},[t._v(\"#\")]),t._v(\" 通信数据转发程序：代理、网关和隧道\")]),t._v(\" \"),r(\"p\",[r(\"strong\",[t._v(\"代理\")]),t._v('\\n代理是一种具有转发功能的应用程序，它扮演了位于服务器和客户端\"中间人\"的角色，接收由客户端发送的请求并转\\n发给服务器，同时也接收服务器返回的响应并转发给客户端')]),t._v(\" \"),r(\"p\",[r(\"strong\",[t._v(\"网关\")]),t._v(\"\\n网关是转发其他服务器通信数据的服务器，接收从客户端发送来的请求时，他就像自己拥有资源的源服务器一样对请\\n求进行处理。有时客户端可能都不会察觉，自己的通信目标是一个网关\")]),t._v(\" \"),r(\"p\",[r(\"strong\",[t._v(\"隧道\")]),t._v(\"\\n隧道是在相隔甚远的客户端和服务器两者之间进行中转，并保持双方通信连接的应用程序\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"代理\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代理\"}},[t._v(\"#\")]),t._v(\" 代理\")]),t._v(\" \"),r(\"p\",[t._v(\"代理服务器的基本行为就是接收客户端发送的请求后转发给其他服务器，代理不改变请求URI，会直接发送给前方持有\\n资源的目标服务器。持有资源实体的服务器称为源服务器，从源服务器返回的响应经过代理服务器后再传给客户端。\\n在HTTP通信过程中，可级联多台代理服务器。请求和响应的转发会经过数台类似锁链一样连接起来的代理服务器。转\\n发时，需要附加VIa首部字段以标记出经过的主机信息\")]),t._v(\" \"),r(\"p\",[t._v(\"使用代理服务器的理由有：利用缓存技术减少网络带宽的流量，组织内部针对特点网站的访问控制，以获取日志为主要\\n目的等等。代理有多种使用方法，按两种基准分类。一种是是否使用缓存，一种是是否会修改报文\")]),t._v(\" \"),r(\"p\",[t._v(\"缓存代理\\n代理转发响应时，缓存代理会预先将资源的副本（缓存）保存在代理服务器上。当代理再次接收到对相同资源的访问时，\\n就可以不从源服务器那儿获取资源，而是将之前缓存的资源作为响应返回\")]),t._v(\" \"),r(\"p\",[t._v(\"透明代理\\n转发请求或响应时，不对报文做任何加工的代理类型被称为透明代理，反之则称为非透明代理\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"网关\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#网关\"}},[t._v(\"#\")]),t._v(\" 网关\")]),t._v(\" \"),r(\"p\",[t._v(\"网关的工作机制与代理十分相似，而网关能使通信路上的服务器提供非HTTP协议服务。利用网关能提高通讯的安全性，\\n因为可以在客户端与网关之间的通信线路上加密以确保连接的安全。比如，网关可以连接数据库，使用SQL语句查询数\\n据。另外，使用Web购物网站上进行信用卡结算时，网关可以和信用卡结算系统联动\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"隧道\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#隧道\"}},[t._v(\"#\")]),t._v(\" 隧道\")]),t._v(\" \"),r(\"p\",[t._v(\"隧道可以按要求建立起一条与其他服务器的通信线路，届时使用SSL等加密手段进行通信。隧道的目的是确保客户端能\\n与其他服务器进行安全的通信。隧道本身不回去解析HTTP请求，也就是说，请求保持原样中转给之后的服务器。隧道\\n会在双方通信断开连接时结束\")]),t._v(\" \"),r(\"hr\"),t._v(\" \"),r(\"h2\",{attrs:{id:\"保存资源的缓存\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#保存资源的缓存\"}},[t._v(\"#\")]),t._v(\" 保存资源的缓存\")]),t._v(\" \"),r(\"p\",[t._v(\"缓存是指代理服务器或客户端本地保存的资源副本，利用缓存可减少对源服务器的访问，因此也就节省了通信流量和通\\n信时间。缓存服务器是代理服务器的一种，并归类在缓存代理类型中，换句话说，当代理转发从服务器返回的响应时，\\n代理服务器将会保存一份资源的副本。缓存服务器的优势在于利用缓存可避免多次从源服务器转发资源。因此客户端可\\n就近从缓存服务器上获取资源，而源服务器也就不必多次处理相同的请求了\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"缓存的有效期\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#缓存的有效期\"}},[t._v(\"#\")]),t._v(\" 缓存的有效期\")]),t._v(\" \"),r(\"p\",[t._v('即使缓存服务器内有缓存，也不能保证每次都会返回对同资源的请求，因为这关系到被缓存资源的有效性问题。即使存\\n在缓存，也会因为客户端的要缓存的有效期等因素，向源服务器确认资源的有效性。若判断缓存失效，缓存服务器将会\\n再次从源服务器上获取\"新\"资源')]),t._v(\" \"),r(\"h4\",{attrs:{id:\"客户端的缓存\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#客户端的缓存\"}},[t._v(\"#\")]),t._v(\" 客户端的缓存\")]),t._v(\" \"),r(\"p\",[t._v(\"缓存不仅可以存在于缓存服务器内，还可以存在于客户端浏览器中。以Internal Explorer程序为例，把客户端缓存称为\\n临时网络文件。浏览器缓存如果有效，就不必再向服务器请求相同的资源了，可以直接从本地磁盘内读取。另外，和\\n缓存服务器相同的一点是，当判定缓存过期后，回向源服务器确定资源的有效性。若判断浏览器缓存失效，浏览器会\\n再次请求新资源\")])])}),[],!1,null,null,null);a.default=v.exports}}]);","extractedComments":[]}