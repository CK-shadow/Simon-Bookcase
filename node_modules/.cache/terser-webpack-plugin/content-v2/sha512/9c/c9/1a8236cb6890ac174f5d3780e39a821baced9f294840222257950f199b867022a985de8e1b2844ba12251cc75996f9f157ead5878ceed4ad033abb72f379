{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{514:function(t,r,o){t.exports=o.p+\"assets/img/f7544113.31749a61.png\"},746:function(t,r,o){\"use strict\";o.r(r);var e=o(0),v=Object(e.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h2\",{attrs:{id:\"应用分层\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#应用分层\"}},[t._v(\"#\")]),t._v(\" 应用分层\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[e(\"p\",[e(\"font\",{attrs:{color:\"orange\"}},[t._v(\"[推荐]\")]),t._v(\" 图中默认上层依赖于下层，箭头关系表示可直接依赖，如：\\n\"),e(\"img\",{attrs:{src:o(514),alt:\"\"}})],1)]),t._v(\" \"),e(\"li\",[e(\"p\",[e(\"font\",{attrs:{color:\"green\"}},[t._v(\"[参考]\")]),t._v(\" 分层领域模型规约：\")],1),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"DO（Data Object）：此对象与数据库表结构一一对应，通过 DAO 层向上传输数据源对象\")]),t._v(\" \"),e(\"li\",[t._v(\"DTO（Data Transfer Object）：数据传输对象，Service 或 Manager 向外传输的对象\")]),t._v(\" \"),e(\"li\",[t._v(\"BO（Business Object）：业务对象，由 Service 层输出的封装业务逻辑的对象\")]),t._v(\" \"),e(\"li\",[t._v(\"AO（Application Object）：应用对象，在 Web 层与 Service 层之间抽象的复用对象模型， 极为贴近展示层，复用度不高\")]),t._v(\" \"),e(\"li\",[t._v(\"VO（View Object）：显示层对象，通常是 Web 向模板渲染引擎层传输的对象\")]),t._v(\" \"),e(\"li\",[t._v(\"Query：数据查询对象，各层接收上层的查询请求。注意超过 2 个参数的查询封装，禁止 使用 Map 类来传输\")])])])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"二方库依赖\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二方库依赖\"}},[t._v(\"#\")]),t._v(\" 二方库依赖\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[e(\"font\",{attrs:{color:\"red\"}},[t._v(\"[强制]\")]),t._v(\" 定义 GAV 遵从以下规则：\\n\"),e(\"ul\",[e(\"li\",[t._v(\"GroupID 格式：com.{公司/BU }.业务线 （.子业务线），最多 4 级\")]),t._v(\" \"),e(\"li\",[t._v(\"ArtifactID 格式：产品线名-模块名。语义不重复不遗漏，先到中央仓库去查证一下\")])])],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"red\"}},[t._v(\"[强制]\")]),t._v(\" 二方库版本号命名方式：主版本号.次版本号.修订号\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"red\"}},[t._v(\"[强制]\")]),t._v(\" 线上应用不要依赖 SNAPSHOT 版本（安全包除外）\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"red\"}},[t._v(\"[强制]\")]),t._v(\" 二方库的新增或升级，保持除功能点之外的其它 jar 包仲裁结果不变\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"red\"}},[t._v(\"[强制]\")]),t._v(\" 二方库里可以定义枚举类型，参数可以使用枚举类型，但是接口返回值不允许使用枚 举类型或者包含枚举类型的 POJO 对象\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"red\"}},[t._v(\"[强制]\")]),t._v(\" 依赖于一个二方库群时，必须定义一个统一的版本变量，避免版本号不一致\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"red\"}},[t._v(\"[强制]\")]),t._v(\" 禁止在子项目的 pom 依赖中出现相同的 GroupId，相同的 ArtifactId，但是不同的 Version\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"orange\"}},[t._v(\"[推荐]\")]),t._v(\" 所有 pom 文件中的依赖声明放在dependencies语句块中，所有版本仲裁放在 dependencyManagement语句块中\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"orange\"}},[t._v(\"[推荐]\")]),t._v(\" 二方库不要有配置项，最低限度不要再增加配置项\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"服务器\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#服务器\"}},[t._v(\"#\")]),t._v(\" 服务器\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[e(\"font\",{attrs:{color:\"orange\"}},[t._v(\"[推荐]\")]),t._v(\" 高并发服务器建议调小 TCP 协议的 time_wait 超时时间\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"orange\"}},[t._v(\"[推荐]\")]),t._v(\" 调大服务器所支持的最大文件句柄数（File Descriptor，简写为 fd）\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"orange\"}},[t._v(\"[推荐]\")]),t._v(\" 给 JVM 环境参数设置-XX:+HeapDumpOnOutOfMemoryError 参数，让 JVM 碰到 OOM 场 景时输出 dump 信息\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"orange\"}},[t._v(\"[推荐]\")]),t._v(\" 在线上生产环境，JVM 的 Xms 和 Xmx 设置一样大小的内存容量，避免在 GC 后调整堆 大小带来的压力\")],1),t._v(\" \"),e(\"li\",[e(\"font\",{attrs:{color:\"green\"}},[t._v(\"[参考]\")]),t._v(\" 服务器内部重定向使用 forward；外部重定向地址使用 URL 拼装工具类来生成，否则 会带来 URL 维护不一致的问题和潜在的安全风险\")],1)])])}),[],!1,null,null,null);r.default=v.exports}}]);","extractedComments":[]}