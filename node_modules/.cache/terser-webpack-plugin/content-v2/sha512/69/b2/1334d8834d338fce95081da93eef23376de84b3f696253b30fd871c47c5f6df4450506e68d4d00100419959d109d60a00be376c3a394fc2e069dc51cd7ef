{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{385:function(t,s,a){\"use strict\";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"迭代器\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#迭代器\"}},[t._v(\"#\")]),t._v(\" 迭代器\")]),t._v(\" \"),a(\"p\",[t._v(\"定义\"),a(\"br\"),t._v(\"\\n 迭代器是访问可迭代对象的工具\"),a(\"br\"),t._v(\"\\n 迭代器是指用iter(obj)函数返回的对象（实例）\"),a(\"br\"),t._v(\"\\n 迭代器可以用next(it)函数获取可迭代对象的函数\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"迭代器函数iter和next\")]),a(\"br\"),t._v(\"\\niter(iterable)从可迭代对象中返回一个迭代器，iterable必须是一个能提供迭代器的对象\"),a(\"br\"),t._v(\"\\nnext(iterator)从迭代器中获取下一个记录，如果无法获取下一条记录，则触发StopIteration异常\"),a(\"br\"),t._v(\"\\n说明：\"),a(\"br\"),t._v(\"\\n 迭代器只能向前取值，不会后退\"),a(\"br\"),t._v(\"\\n 用iter函数可以返回一个可迭代对象的迭代器\"),a(\"br\"),t._v(\"\\n作用：\"),a(\"br\"),t._v(\"\\n 迭代器对象能用next函数获取下一个元素\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"生成器（python2-5及以后）\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生成器（python2-5及以后）\"}},[t._v(\"#\")]),t._v(\" 生成器（Python2.5及以后）\")]),t._v(\" \"),a(\"p\",[t._v(\"解释：\"),a(\"br\"),t._v(\"\\n 生成器是能够动态提供数据的对象，生成器对象也是可迭代对象（实例）\")]),t._v(\" \"),a(\"p\",[t._v(\"生成器有两种：\"),a(\"br\"),t._v(\"\\n 1.生成器函数\"),a(\"br\"),t._v(\"\\n 2.生成器表达式\")]),t._v(\" \"),a(\"p\",[t._v(\"生成器函数的定义：\"),a(\"br\"),t._v(\"\\n 含有yield语句的函数是生成器函数，此函数被调用将返回一个生成器对象\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"yield语法\")]),a(\"br\"),t._v(\"\\n语法：\"),a(\"br\"),t._v(\"\\n yield 表达式\"),a(\"br\"),t._v(\"\\n说明：\"),a(\"br\"),t._v(\"\\n yield 用于def函数中目的是将此函数作为生成器函数使用\"),a(\"br\"),t._v(\"\\n yield 用来生成数据，供迭代器的next(it)函数使用\")]),t._v(\" \"),a(\"p\",[t._v(\"生成器函数说明\"),a(\"br\"),t._v(\"\\n 生成器函数的调用将返回一个生成器对象，生成器对象是一个可迭代对象\"),a(\"br\"),t._v(\"\\n 在生成器函数调用return会触发一个StopIteration异常\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"迭代工具函数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#迭代工具函数\"}},[t._v(\"#\")]),t._v(\" 迭代工具函数\")]),t._v(\" \"),a(\"p\",[t._v(\"迭代工具函数的作用是生成一个个性化的可迭代对象\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"函数\")]),a(\"br\"),t._v(\"\\nzip(iter1 [, iter2[, ...]])\"),a(\"br\"),t._v(\"\\n 返回一个zip对象，此对象用于生成元素，此元组的个数由最小的可迭代对象决定\"),a(\"br\"),t._v(\"\\nenumerate(iterable[, start])\"),a(\"br\"),t._v(\"\\n 生成带索引的枚举对象，返回迭代类型为索引-值对(index-value对)，默认索引从零开始，也可用start指定\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"字节串和字节数组\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#字节串和字节数组\"}},[t._v(\"#\")]),t._v(\" 字节串和字节数组\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"字节串的构造函数\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"bytes\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#生成一个字的字节串，等同于b''\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"bytes\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"整数可迭代对象\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#用可替换对象创建一个字节串\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"bytes\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"整数n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#生成n个值为0的字节串\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"bytes\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"字符串\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" encoding\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'UTF8'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#用字符串的转换编码生成一个字节串\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[t._v(\"bytes的运算\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"与其他序列的运算规则完全相同\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+=\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*=\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<=\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">=\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!=\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"in\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"not\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"in\")]),t._v(\"\\n索引和切片\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[t._v(\"bytes和str的区别\")]),a(\"br\"),t._v(\"\\nbytes存储字节（0-255）\"),a(\"br\"),t._v(\"\\nstr存储字符（用来表示文字信息，值为0-65535甚至更大）\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"bytes和str的转变\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"编码（encode） \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"str\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"bytes\")]),t._v(\"\\nb \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" s\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"encode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"encoding\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'gbk'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n解码（decode） \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"bytes\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"str\")]),t._v(\"\\ns \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" b\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"decode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"encoding\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'gbk'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[t._v(\"字节数组bytearray\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"bytes\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#生成一个字的字节串，等同于b''\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"bytes\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"整数可迭代对象\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#用可替换对象创建一个字节串\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"bytes\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"整数n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#生成n个值为0的字节串\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"bytes\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"字符串\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" encoding\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'UTF8'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#用字符串的转换编码生成一个字节串\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",[t._v(\"注;用法与bytes完全相同，不同的是bytearray是可变的，bytes是不可变的\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"bytes的方法\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"B\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"clear\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    清空\\nB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"append\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    追加一个字节（n为\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"255\")]),t._v(\"的整数）\\nB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"remove\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"value\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    删除第一个出现的字节，如果没有出现，则产生ValueError错误\\nB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"reverse\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    字节的顺序进行反转\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}