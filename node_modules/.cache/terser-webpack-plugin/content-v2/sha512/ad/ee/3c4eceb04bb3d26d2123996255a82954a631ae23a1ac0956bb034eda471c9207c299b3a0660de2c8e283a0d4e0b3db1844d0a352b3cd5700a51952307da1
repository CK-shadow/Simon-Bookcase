{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{637:function(r,t,s){\"use strict\";s.r(t);var a=s(0),e=Object(a.a)({},(function(){var r=this,t=r.$createElement,s=r._self._c||t;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":r.$parent.slotKey}},[s(\"h3\",{attrs:{id:\"什么是hystrix\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是hystrix\"}},[r._v(\"#\")]),r._v(\" 什么是Hystrix\")]),r._v(\" \"),s(\"p\",[r._v(\"在分布式系统中，服务与服务之间的依赖错综复杂，一种不可避免的情况就是某些服务会出现故障，导致依赖于它们的其它服务出现远程调度的线程阻塞。熔断器能够阻止分布式系统中出现联动故障。Hystrix是通过隔离服务的访问点阻止联动故障的，并提供了故障的解决方案，从而提高了整个分布式系统的弹性\")]),r._v(\" \"),s(\"h3\",{attrs:{id:\"hystrix解决了什么问题\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#hystrix解决了什么问题\"}},[r._v(\"#\")]),r._v(\" Hystrix解决了什么问题\")]),r._v(\" \"),s(\"p\",[r._v(\"在高并发情况下，单个服务的延迟会导致整个请求处于阻塞状态，最终的结果就是整个服务的线程资源消耗殆尽。由于服务的依赖性，会导致依赖于该故障服务的其它服务也处于线程阻塞状态，最终导致这些服务的线程资源消耗殆尽，直到不可用，从而导致整个服务系统都不可用，即雪崩效应。为防止雪崩效应，因而产生了熔断器模型，它是Spring Cloud组件不可缺少的一部分\")]),r._v(\" \"),s(\"h3\",{attrs:{id:\"hystrix的设计原则\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#hystrix的设计原则\"}},[r._v(\"#\")]),r._v(\" Hystrix的设计原则\")]),r._v(\" \"),s(\"p\",[r._v(\"总的来说，Hystrix的设计原则如下：\")]),r._v(\" \"),s(\"ul\",[s(\"li\",[r._v(\"防止单个服务的故障耗尽整个服务的Servlet容器的线程资源\")]),r._v(\" \"),s(\"li\",[r._v(\"快速失败进制，如果某个服务出现了故障，则调用该服务的请求快速失败，而不是线程等待\")]),r._v(\" \"),s(\"li\",[r._v(\"提供回退（rollback）方案，在请求发生故障时，提供设定好的回退方案\")]),r._v(\" \"),s(\"li\",[r._v(\"使用熔断机制，防止故障扩散到其它服务\")]),r._v(\" \"),s(\"li\",[r._v(\"提供熔断器的监控组件Hystrix Dashboard，可实时监控熔断器的状态\")])]),r._v(\" \"),s(\"h3\",{attrs:{id:\"hystrix工作机制\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#hystrix工作机制\"}},[r._v(\"#\")]),r._v(\" Hystrix工作机制\")]),r._v(\" \"),s(\"p\",[r._v(\"当服务的某个API接口的失败次数在一定时间内小于设定的阈值时，熔断器处于关闭状态，该API接口正常提供服务。当该API接口处理请求的失败次数大于设定的阈值时，Hystrix判定该接口出现了故障，打开熔断器，这时请求该API接口会执行快速失败的逻辑（即rollback回退的逻辑），不执行业务逻辑，请求的线程不会处于阻塞状态。处于打开状态的熔断器，一段时间后会处于半打开状态，并将一定数量的请求执行正常逻辑。剩余的请求会执行快速失败，若执行正常逻辑的请求失败了，则熔断器继续打开。若成功了，则将熔断器关闭，这样熔断器就有了自我修复的能力\")]),r._v(\" \"),s(\"h3\",{attrs:{id:\"代码示例\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码示例\"}},[r._v(\"#\")]),r._v(\" 代码示例\")]),r._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://gitee.com/CK_Simon/cloud-demo/tree/master/eureka-ribbon-client-service\",target:\"_blank\",rel:\"noopener noreferrer\"}},[r._v(\"消费者添加熔断器\"),s(\"OutboundLink\")],1)]),r._v(\" \"),s(\"h3\",{attrs:{id:\"使用hystrix-dashboard监控熔断器的状态\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用hystrix-dashboard监控熔断器的状态\"}},[r._v(\"#\")]),r._v(\" 使用Hystrix Dashboard监控熔断器的状态\")]),r._v(\" \"),s(\"p\",[r._v(\"熔断器的状况反应了一个程序的可用性和健壮性，它是一个重要指标。Hystrix Dashboard是监控熔断器Hystrix状况的一个组件，提供了数据监控和友好的图形化展示界面\")]),r._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://gitee.com/CK_Simon/cloud-demo/tree/master/eureka-feign-service\",target:\"_blank\",rel:\"noopener noreferrer\"}},[r._v(\"代码示例\"),s(\"OutboundLink\")],1)]),r._v(\" \"),s(\"h3\",{attrs:{id:\"使用turbine聚合监控\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用turbine聚合监控\"}},[r._v(\"#\")]),r._v(\" 使用Turbine聚合监控\")]),r._v(\" \"),s(\"p\",[r._v(\"在使用Hystrix Dashboard组件监控服务的熔断器状况时，每个服务都有一个Hystrix Dashboard主页，当服务数量很多时，监控非常不方便。为了同事监控多个服务的熔断器的状况，Netflix开源了Hystrix的另一个组件Turbine。Turbine用于聚合多个Hystrix Dashboard，将多个Hystrix Dashboard组件的数据放在一个页面上展示，进行集中监控\")])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}