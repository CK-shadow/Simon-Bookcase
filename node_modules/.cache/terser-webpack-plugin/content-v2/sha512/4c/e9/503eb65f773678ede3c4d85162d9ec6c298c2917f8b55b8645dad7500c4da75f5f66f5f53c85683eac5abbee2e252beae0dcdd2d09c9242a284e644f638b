{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{581:function(s,t,a){\"use strict\";a.r(t);var n=a(0),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"导入语句、import语句等搜索块的搜索路径\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#导入语句、import语句等搜索块的搜索路径\"}},[s._v(\"#\")]),s._v(\" 导入语句、import语句等搜索块的搜索路径\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" mymod\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" mymod \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" myfac\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" mymod \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"p\",[s._v(\"搜索顺序：\"),a(\"br\"),s._v(\"\\n 1.搜索程序运行时的路径（当前路径）\"),a(\"br\"),s._v(\"\\n 2.sys.path提供的路径\"),a(\"br\"),s._v(\"\\n 3.搜索内建模块\")]),s._v(\" \"),a(\"p\",[s._v(\"模块的加载过程\"),a(\"br\"),s._v(\"\\n 1.在模块导入时，模块的所有语句都是执行\"),a(\"br\"),s._v(\"\\n 2.如果一个模块已经导入，则再次导入时不会重新执行模块内的语句\")]),s._v(\" \"),a(\"p\",[s._v(\"模块的导入和执行的过程\"),a(\"br\"),s._v(\"\\n 1.先搜索相关的路径，找到模块名.py\"),a(\"br\"),s._v(\"\\n 2.判断是否有此模块名对应的.pyc文件，如果.pyc文件比.py文件新，则直接加载.pyc文件\"),a(\"br\"),s._v(\"\\n 3.否则用模块.py文件生成模块.pyc文件，并执行\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"模块的文档字符串\")]),a(\"br\"),s._v(\"\\n模块内第一个没有赋值给任何变量的字符串称为模块的文档字符串\"),a(\"br\"),s._v(\"\\n模块的_doc_属性\"),a(\"br\"),s._v(\"\\n 此属性用于绑定模块的文档字符串\"),a(\"br\"),s._v(\"\\n模块的_file_属性\"),a(\"br\"),s._v(\"\\n 此属性用于记录模块对应的文件路径\"),a(\"br\"),s._v(\"\\n模块的_name_属性\"),a(\"br\"),s._v(\"\\n 此属性用来记录模块自身的名字\"),a(\"br\"),s._v(\"\\n作用：\"),a(\"br\"),s._v(\"\\n 1.记录模块名\"),a(\"br\"),s._v(\"\\n 2.用来判断是否为主模块\"),a(\"br\"),s._v(\"\\n说明：\"),a(\"br\"),s._v('\\n 当此模块为主模块（也就是第一个运行的模块）时，_name_绑定\"'),a(\"em\",[s._v(\"main\")]),s._v('\"'),a(\"br\"),s._v(\"\\n 当此模块不是主模块，而是被其他模块导入时，此时_name_绑定模块名\")]),s._v(\" \"),a(\"p\",[s._v(\"模块的隐藏属性\"),a(\"br\"),s._v('\\n 模块中以\"_\"开头的属性，在 from xxx import *导入时将不被导入，通常这些属性称为隐藏属性')]),s._v(\" \"),a(\"h3\",{attrs:{id:\"包（模块包）package\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#包（模块包）package\"}},[s._v(\"#\")]),s._v(\" 包（模块包）package\")]),s._v(\" \"),a(\"p\",[s._v(\"包的定义\"),a(\"br\"),s._v(\"\\n 包是将模块以文件夹的组织形式进行分组管理的管理方法\"),a(\"br\"),s._v(\"\\n作用\"),a(\"br\"),s._v(\"\\n 将一系列模块进行分类管理，有利于防止命名冲突，可以在需要时加载一个或部分模块而不是全部\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"包的导入\")]),a(\"br\"),s._v(\"\\n同模块的导入规则\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# import 语句\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" 包名 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"as\")]),s._v(\" 新包名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" 包名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"模块名 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"as\")]),s._v(\" 模块新名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" 包名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"子包名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"模块名 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"as\")]),s._v(\" 模块新名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n            \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# from import 语句\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" 包名 \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" 模块名 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"as\")]),s._v(\" 模块新名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" 包名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"子包名 \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" 模块名 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"as\")]),s._v(\" 模块新名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" 包名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"子包名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"模块名 \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" 属性名 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"as\")]),s._v(\" 属性新名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n            \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# from import * 语句\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" 包名 \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" 包名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"模块名 \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\")])]),a(\"p\",[s._v(\"导入包时的索引路径顺序\"),a(\"br\"),s._v(\"\\n 1.搜索程序的当前路径\"),a(\"br\"),s._v(\"\\n 2.sys.path提供的路径\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[a(\"em\",[s._v(\"init\")]),s._v(\".py中的_all_列表\")]),a(\"br\"),s._v(\"\\n作用：\"),a(\"br\"),s._v(\"\\n 用来记录此包中有哪些子包或模块在from import * 语句时被导入\"),a(\"br\"),s._v(\"\\n说明：\"),a(\"br\"),s._v(\"\\n _all_列表只对from xxx import *语句起作用\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"包的相对导入\")]),a(\"br\"),s._v(\"\\n包的相对导入是指包内模块的相互导入\"),a(\"br\"),s._v(\"\\n语法：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" 相对路径包\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"模块 \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" 属性名\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"模块名\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" 相对路径包\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"模块名 \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" 属性名\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"模块名\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[s._v(\"相对路径：\")]),a(\"br\"),s._v(\"\\n. 代表当前目录\"),a(\"br\"),s._v(\"\\n..  代表上一级目录\"),a(\"br\"),s._v(\"\\n...  代表上两级目录\"),a(\"br\"),s._v(\"\\n....  以此类推\")])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}