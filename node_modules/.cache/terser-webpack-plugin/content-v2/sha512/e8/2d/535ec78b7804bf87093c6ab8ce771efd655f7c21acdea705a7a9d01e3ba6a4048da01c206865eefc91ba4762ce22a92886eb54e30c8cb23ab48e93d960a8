{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{617:function(e,t,s){\"use strict\";s.r(t);var r=s(0),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[s(\"h2\",{attrs:{id:\"什么是mq\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是mq\"}},[e._v(\"#\")]),e._v(\" 什么是MQ\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"消息队列（Message Queue，简称MQ），从字面意义上看，本质是个队列，FIFO先入先出，只不过队列中存放的内容是message而已\"),s(\"br\"),e._v(\"\\n其主要用途：不同进程Process/线程Thread之间通信\")])]),e._v(\" \"),s(\"p\",[e._v(\"为什么会产生消息队列，有几个原因：\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"不同进程（Process）之间传递消息时，两个进程之间耦合程度过高，改动一个进程，引发必须修改另一个进程，为了隔离这两个进程，在两进程之间抽离出一层（一个模块），所有两进程之间传递的消息，都必须通过消息队列来传递，单独修改某一个进程，不会影响另一个\")]),e._v(\" \"),s(\"li\",[e._v(\"不同进程（Process）之间传递消息时，为了实现标准化，将消息的格式规范化了，并且，某一个进程接收的消息太多，一下子无法处理完，并且也有先后顺序，必须对收到的消息进程排队，因此诞生了事实上的消息队列\")])]),e._v(\" \"),s(\"p\",[e._v(\"MQ框架非常之多，比较流行的有RabbitMQ、ActiveMQ、ZeroMQ、Kafka以寄阿里开源的RocketMQ\")])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}