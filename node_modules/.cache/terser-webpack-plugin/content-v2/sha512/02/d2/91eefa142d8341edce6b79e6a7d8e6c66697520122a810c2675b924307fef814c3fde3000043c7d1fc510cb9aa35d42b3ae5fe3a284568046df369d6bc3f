{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{608:function(n,i,o){\"use strict\";o.r(i);var r=o(0),t=Object(r.a)({},(function(){var n=this,i=n.$createElement,o=n._self._c||i;return o(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[o(\"h3\",{attrs:{id:\"springboot概述\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#springboot概述\"}},[n._v(\"#\")]),n._v(\" SpringBoot概述\")]),n._v(\" \"),o(\"p\",[n._v(\"特点\")]),n._v(\" \"),o(\"ol\",[o(\"li\",[n._v(\"实现了各种主流框架的快速整合\")]),n._v(\" \"),o(\"li\",[n._v(\"实现了Spring应用的快速部署，使用Spring开发的Web应用的快速部署\")])]),n._v(\" \"),o(\"p\",[n._v(\"涉及Spring框架的纯注解配置类的常用注解如下\")]),n._v(\" \"),o(\"ul\",[o(\"li\",[n._v(\"@Configuration 声明一个配置类，配置类的作用等同于Spring的配置文件\")]),n._v(\" \"),o(\"li\",[n._v(\"@Bean 将没有声明@Component、@Controller、@Service、@Repository的类加入到bean容器\")]),n._v(\" \"),o(\"li\",[n._v(\"@PropertySource 在Spring配置里读取，增加这个注解，可以使用@Value获取propertires中的内容\")]),n._v(\" \"),o(\"li\",[n._v(\"@Value 获得上下文中，Properties文件的内容\")]),n._v(\" \"),o(\"li\",[n._v(\"@ComponentScan 用于扫描类，创建对象到spring容器中\")]),n._v(\" \"),o(\"li\",[n._v(\"@ConditionOnMissingBean 如果spring容器中已有该类的对象，就不执行创建方法再创建一次\")])]),n._v(\" \"),o(\"p\",[n._v(\"入口类使用@SpringBootApplication注解，启动项目时，SpringBoot框架会扫描入口类的同级目录和子目录中的类添加到spring容器中\")]),n._v(\" \"),o(\"p\",[n._v(\"导入devtools相关依赖可实现热加载\")])])}),[],!1,null,null,null);i.default=t.exports}}]);","extractedComments":[]}