{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{604:function(s,t,n){\"use strict\";n.r(t);var a=n(0),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[n(\"h3\",{attrs:{id:\"for语句\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#for语句\"}},[s._v(\"#\")]),s._v(\" for语句\")]),s._v(\" \"),n(\"p\",[s._v(\"作用：用来遍历可可迭代对象的数据元素\")]),s._v(\" \"),n(\"p\",[s._v(\"可迭代对象是指能能依次获取数据元素的对象\"),n(\"br\"),s._v(\"\\n可迭代的对象包括：\\n    字符串 str\\n    列表 list\\n    元组 tuple\\n    字典 dict\\n    ...\")]),s._v(\" \"),n(\"p\",[s._v(\"for语法：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-python line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" 变量列表 \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" 可迭代对象：\\n    语句块\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\"\\n    语句块\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"div\",{staticClass:\"custom-block tip\"},[n(\"p\",[s._v(\"说明：当循环内部用break语句终止循环时，else子句部分的语句不会执行\")])]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"range函数\")])]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"格式：range（stop）\\n    从零开始，每次生成一个整数后加1操作，直到stop为止（不包含stop）\")]),s._v(\" \"),n(\"li\",[s._v(\"range（start, stop, [step]）\\n    从start开始，每次生成一个整数后移动step，直到stop为止（不包含step，且step可以是负数）\")]),s._v(\" \"),n(\"li\",[s._v(\"作用：用来创建一个生成一系列整数的可迭代对象（也叫整数序列生成器）\")]),s._v(\" \"),n(\"li\",[s._v(\"说明：range函数调用返回的对象可用于for语句来进行依次迭代取出其中的整数\")])]),s._v(\" \"),n(\"h3\",{attrs:{id:\"continue语句\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#continue语句\"}},[s._v(\"#\")]),s._v(\" continue语句\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"作用：用于循环语句中（while，for语句），不再执行此次循环内continue之后的语句，重新开始依次新的循环\")]),s._v(\" \"),n(\"li\",[s._v(\"说明：在while语句中执行continue语句，将会直接跳转到while语句的真值表达式处重新判定循环条件\\n   在for语句中，执行continue语句，将会从可迭代对象中取一下元素绑定变量后再次进行循环\")])]),s._v(\" \"),n(\"h3\",{attrs:{id:\"列表list\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#列表list\"}},[s._v(\"#\")]),s._v(\" 列表list\")]),s._v(\" \"),n(\"p\",[s._v(\"列表的定义：\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[s._v(\"列表是一种容器（通常用来存储计算机的数据对象）\")]),s._v(\" \"),n(\"li\",[s._v(\"列表时可以被改变的序列\")]),s._v(\" \"),n(\"li\",[s._v(\"列表是一系列特定元素组成的，元素与元素之间可能没有任何的关联关系，但他们之间有先后顺序关系\")])]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"创建空列表的字面值方式\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language-python line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[n(\"code\",[s._v(\"L \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# L绑定空列表\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[n(\"strong\",[s._v(\"创建非空列表的字面值方式\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language-python line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[n(\"code\",[s._v(\"L \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\nL \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'北京'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'上海'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'广州'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'深圳'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\nL \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'two'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3.14\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'四'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\nL \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[n(\"strong\",[s._v(\"列表的构造函数\")]),n(\"br\"),s._v(\"\\n    list()  生成一个空的列表，等同于[]\"),n(\"br\"),s._v(\"\\n    list(iterable)  用可迭代对象创建一个列表\\n示例：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-python line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[n(\"code\",[s._v(\"L \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"list\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# L = []\")]),s._v(\"\\nL \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"list\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"hello\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# L = ['h', 'e', 'l', 'l', 'o']\")]),s._v(\"\\nL \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"list\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"range\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# L = [5, 7, 9]\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"列表的运算\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#列表的运算\"}},[s._v(\"#\")]),s._v(\" 列表的运算\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"运算符\")]),n(\"br\"),s._v(\"\\n+ += *  *=\"),n(\"br\"),s._v(\"\\n+ 用于拼接列表\"),n(\"br\"),s._v(\"\\n* 用于生成重复的列表\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"列表的比较运算\")]),n(\"br\"),s._v(\"\\n运算符：\"),n(\"br\"),s._v(\"\\n    < <= > >= == !=\"),n(\"br\"),s._v(\"\\n比较规则：\"),n(\"br\"),s._v(\"\\n    同字符串比较规则完全相同\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"列表的in/not in运算符：\")]),n(\"br\"),s._v(\"\\n判断一个元素是否存在于列表中，如果存在返回True，否则返回False\"),n(\"br\"),s._v(\"\\nin和not in的返回值相反\")])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}